[{"C:\\Users\\Hakan\\OneDrive\\Desktop\\Lessons\\4. Year\\1st Semester\\CS353\\adexProje\\adex\\src\\Components\\Curator\\Footers\\Footer.js":"1","C:\\Users\\Hakan\\OneDrive\\Desktop\\Lessons\\4. Year\\1st Semester\\CS353\\adexProje\\adex\\src\\Components\\User\\UserComponents\\LibraryCards\\LibraryCards.js":"2","C:\\Users\\Hakan\\OneDrive\\Desktop\\Lessons\\4. Year\\1st Semester\\CS353\\adexProje\\adex\\src\\Components\\Curator\\CuratorComponents\\StoreCards\\StoreCard.js":"3","C:\\Users\\Hakan\\OneDrive\\Desktop\\Lessons\\4. Year\\1st Semester\\CS353\\adexProje\\adex\\src\\Components\\User\\UserComponents\\StoreCards\\StoreCard.js":"4","C:\\Users\\Hakan\\OneDrive\\Desktop\\Lessons\\4. Year\\1st Semester\\CS353\\adexProje\\adex\\src\\Components\\User\\UserComponents\\WishlistCards\\WishlistCard.js":"5"},{"size":649,"mtime":1608995060065,"results":"6","hashOfConfig":"7"},{"size":9126,"mtime":1608999772126,"results":"8","hashOfConfig":"7"},{"size":10690,"mtime":1608999687231,"results":"9","hashOfConfig":"7"},{"size":6979,"mtime":1608999759583,"results":"10","hashOfConfig":"7"},{"size":6819,"mtime":1608999873422,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n8vesb",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Hakan\\OneDrive\\Desktop\\Lessons\\4. Year\\1st Semester\\CS353\\adexProje\\adex\\src\\Components\\Curator\\Footers\\Footer.js",[],"C:\\Users\\Hakan\\OneDrive\\Desktop\\Lessons\\4. Year\\1st Semester\\CS353\\adexProje\\adex\\src\\Components\\User\\UserComponents\\LibraryCards\\LibraryCards.js",["23"],"import React, { Component } from 'react';\r\nimport { Progress, Card, CardImg, CardBody, CardTitle, ListGroup, ListGroupItem, Button, Badge } from 'reactstrap';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport axios from 'axios';\r\n\r\nclass LibraryCard extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state =\r\n        {\r\n            id: localStorage.getItem('id'),\r\n            type: \"seeMods\",\r\n            checkMI: false,\r\n            mods: [],\r\n            gameID: 0,\r\n            checkMI2: false,\r\n            checkBI: false,\r\n            curM: \"\",\r\n            reviews: [],\r\n            checkRI: false,\r\n        }\r\n        this.seeReviews = this.seeReviews.bind(this);\r\n        this.seeMods = this.seeMods.bind(this);\r\n        this.seeBuild = this.seeBuild.bind(this);\r\n        this.buildMod = this.buildMod.bind(this);\r\n        this.changeM = this.changeM.bind(this);\r\n    }\r\n\r\n    changeM(e) {\r\n        const val = e.target.value;\r\n        this.setState({ curM: val });\r\n    }\r\n\r\n    async seeBuild(event) {\r\n        event.preventDefault();\r\n        //Balance Increase Div Show\r\n        if (this.state.checkMI2) {\r\n            this.setState({ checkMI2: false, checkBI: false, gameID: event.target.value });\r\n        }\r\n        else {\r\n            this.setState({ checkMI2: true, gameID: event.target.value });\r\n        }\r\n    }\r\n\r\n    async buildMod(event) {\r\n        event.preventDefault();\r\n        this.setState({ type: \"buildMod\" }, function () {\r\n            const API_PATH = 'http://localhost:8000/adexBackend/api/userLibrary.php';\r\n\r\n            axios({\r\n                method: 'post',\r\n                url: `${API_PATH}`,\r\n                headers: { 'content-type': 'application/json' },\r\n                data: this.state\r\n            })\r\n                .then(result => {\r\n                    console.log(result.data.checkBI)\r\n                    this.setState({ checkBI: result.data.checkBI });\r\n                })\r\n                .catch(error => this.setState({ error: error.message }));\r\n        });\r\n    }\r\n\r\n    async seeMods(event) {\r\n        event.preventDefault();\r\n        if (this.state.checkMI) {\r\n            this.setState({ checkMI: false });\r\n        }\r\n        else {\r\n            this.setState({ type: \"seeMods\", checkMI: false, gameID: event.target.value }, function () {\r\n                const API_PATH = 'http://localhost:8000/adexBackend/api/userLibrary.php';\r\n\r\n                axios({\r\n                    method: 'post',\r\n                    url: `${API_PATH}`,\r\n                    headers: { 'content-type': 'application/json' },\r\n                    data: this.state\r\n                })\r\n                    .then(result => {\r\n                        this.setState({ mods: result.data.modes });\r\n                    })\r\n                    .catch(error => this.setState({ error: error.message }));\r\n                this.setState({ checkMI: true });\r\n            });\r\n        }\r\n    }\r\n\r\n    async seeReviews(event) {\r\n        event.preventDefault();\r\n        if (this.state.checkRI) {\r\n            this.setState({ checkRI: false });\r\n        }\r\n        else {\r\n            this.setState({ type: \"seeReviews\", checkRI: false, gameID: event.target.value }, function () {\r\n                const API_PATH = 'http://localhost:8000/adexBackend/api/curatorStore.php';\r\n\r\n                axios({\r\n                    method: 'post',\r\n                    url: `${API_PATH}`,\r\n                    headers: { 'content-type': 'application/json' },\r\n                    data: this.state\r\n                })\r\n                    .then(result => {\r\n                        this.setState({ reviews: result.data.reviews });\r\n                    })\r\n                    .catch(error => this.setState({ error: error.message }));\r\n                this.setState({ checkRI: true });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let reviewsDD = <div> hakan</div>\r\n        if (this.state.checkRI) {\r\n            reviewsDD = this.state.reviews.map(function (reviewsD, index) {\r\n                return (\r\n                    <div key={index} style = {{border: \"2px solid gray\", padding: \"20px\", margin: \"5px\", borderRadius: \"20px\"}}>\r\n                        <h2 style={{marginTop: \"0px\"}}><b>{reviewsD.username}</b></h2>\r\n                        <h5><u><i>{reviewsD.textO}</i></u></h5>\r\n                        <div className=\"progress-container progress-success\">\r\n                            <span className=\"progress-badge\">Rating</span>\r\n                            <Progress\r\n                                max=\"100\"\r\n                                value={reviewsD.ratingO * 100 / 5} \r\n                                barClassName=\"progress-bar-success\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }, this).reverse();\r\n        }\r\n        let modsDD = <div> hakan</div>\r\n        if (this.state.checkMI) {\r\n            modsDD = this.state.mods.map(function (modsD, index) {\r\n                return (\r\n                    <ListGroup key={index} flush>\r\n                        <ListGroupItem>\r\n                            <Button color=\"warning\" disabled>{index + 1}: {modsD.modeO}</Button>\r\n                        </ListGroupItem>\r\n                    </ListGroup>\r\n                )\r\n            }, this).reverse();\r\n        }\r\n\r\n        let userFeed = this.props.datas.map(function (datas) {\r\n            return (\r\n                <Card key={datas.gameID} style={{ width: '90vw', margin: '2vw 5vw 2vw 5vw', }}>\r\n                    <CardImg top src={datas.imageO} alt=\"...\" />\r\n                    <CardBody>\r\n                        <ListGroup flush>\r\n                            <ListGroupItem><CardTitle><h3>{datas.game_name}</h3></CardTitle></ListGroupItem>\r\n                            <ListGroupItem><Button color=\"primary\">Play</Button></ListGroupItem>\r\n                            <ListGroupItem><Button>Comments</Button></ListGroupItem>\r\n                            <ListGroupItem><Button value={datas.gameID} color=\"success\" onClick={this.seeReviews}>Reviews</Button>\r\n                                {this.state.checkRI && datas.gameID === this.state.gameID ?\r\n                                    <div className=\"Reviews\">\r\n                                        {reviewsDD}\r\n                                    </div>\r\n                                    : \"\"}\r\n                            </ListGroupItem>\r\n                            <ListGroupItem><Button value={datas.gameID} color=\"danger\" onClick={this.seeMods}>Mods</Button>\r\n                                {this.state.checkMI && datas.gameID === this.state.gameID ?\r\n                                    <div className=\"Mods\">\r\n                                        {modsDD}\r\n                                    </div>\r\n                                    : \"\"}\r\n                            </ListGroupItem>\r\n                            <ListGroupItem><Button value={datas.gameID} color=\"info\" onClick={this.seeBuild}>Build Mod</Button>\r\n                                {this.state.checkBI && datas.gameID === this.state.gameID ?\r\n                                    <h6 style={{ color: 'green', paddingBottom: '10px' }}>Built Succesfully</h6> : \"\"}\r\n                                {this.state.checkMI2 && datas.gameID === this.state.gameID ?\r\n                                    <form value={datas.gameID} className=\"form buildMod\" style={{ display: \"grid\" }} method=\"POST\" onSubmit={this.buildMod}>\r\n                                        <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"normal\"\r\n                                            required\r\n                                            width=\"20rem\"\r\n                                            name=\"balanceInc\"\r\n                                            label=\"Mod Name\"\r\n                                            type=\"text\"\r\n                                            id=\"balanceInc\"\r\n                                            onChange={this.changeM}\r\n                                            value={this.state.curM}\r\n                                        />\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            color=\"success\"\r\n                                            className=\"submit\"\r\n                                            value={datas.gameID}\r\n                                        >\r\n                                            Build\r\n                                    </Button> :\r\n                                </form> : \"\"}\r\n                            </ListGroupItem>\r\n                        </ListGroup>\r\n                    </CardBody>\r\n                </Card>\r\n            )\r\n        }, this).reverse();\r\n        return (\r\n            <div>\r\n                {userFeed}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default LibraryCard;","C:\\Users\\Hakan\\OneDrive\\Desktop\\Lessons\\4. Year\\1st Semester\\CS353\\adexProje\\adex\\src\\Components\\Curator\\CuratorComponents\\StoreCards\\StoreCard.js",[],"C:\\Users\\Hakan\\OneDrive\\Desktop\\Lessons\\4. Year\\1st Semester\\CS353\\adexProje\\adex\\src\\Components\\User\\UserComponents\\StoreCards\\StoreCard.js",[],"C:\\Users\\Hakan\\OneDrive\\Desktop\\Lessons\\4. Year\\1st Semester\\CS353\\adexProje\\adex\\src\\Components\\User\\UserComponents\\WishlistCards\\WishlistCard.js",[],{"ruleId":"24","severity":1,"message":"25","line":2,"column":90,"nodeType":"26","messageId":"27","endLine":2,"endColumn":95},"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar"]